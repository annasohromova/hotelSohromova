CREATE TABLE room_type(
id int not null Primary key IDENTITY(1,1),
description varchar(80),
max_capacity int
);

create table logi(
id int primary key identity(1,1),
andmed TEXT,
kuupaev datetime,
kasutaja varchar(100)
);


INSERT INTO room_type(description, max_capacity)
VALUES ('Tuba metsavaatega', 2);
select * from room_type;


INSERT INTO room_type(description, max_capacity)
VALUES ('Tuba merevaatega', 2);
select * from room_type;

INSERT INTO room_type(description, max_capacity)
VALUES ('Tuba metsavaatega', 2);
select * from room_type;

INSERT INTO room_type(description, max_capacity)
VALUES ('Tuba metsavaatega', 3);
select * from room_type;

INSERT INTO room_type(description, max_capacity)
VALUES ('Tuba merevaatega', 1);
select * from room_type;


CREATE TABLE reserved_room(
id int not null Primary key IDENTITY(1,1),
number_of_rooms int,
room_type_id int,
foreign key (room_type_id) references room_type(id),
status varchar(20)
);

INSERT INTO reserved_room(number_of_rooms, room_type_id, status)
VALUES (225, 5, 'hõivatud');
select * from reserved_room;


CREATE TRIGGER roomiLisamine
ON reserved_room
AFTER INSERT
AS
BEGIN
INSERT INTO logi (kuupaev, andmed, kasutaja)
SELECT GETDATE(),
CONCAT('Reserved room added with ID: ', i.id, ' - Room Type: ', rt.description, ' - Max Capacity: ', rt.max_capacity),
USER 
FROM INSERTED i
INNER JOIN room_type rt ON i.room_type_id = rt.id;
END;

INSERT INTO reserved_room (number_of_rooms, room_type_id, status)
VALUES (221, 1, 'hõivatud');
select * from room_type;
select * from reserved_room;
select * from logi;

CREATE TRIGGER roomiUuendamine
ON room_type
AFTER UPDATE
AS
BEGIN
UPDATE rt
SET rt.description = i.description
FROM room_type rt
INNER JOIN inserted i ON rt.id = i.id;

UPDATE rr
SET rr.room_type_id = i.id, rr.status = CONCAT('Uuendatud roomi tüüp - ', i.description)
FROM reserved_room rr
INNER JOIN inserted i ON rr.room_type_id = i.id
INNER JOIN deleted d ON rr.room_type_id = d.id;
END;



--kontroll
UPDATE room_type
SET description = 'Tuba koolivaatega'
WHERE id = 1;
SELECT * FROM reserved_room;
select * from room_type;
--------------------------------------------------
LOCALHOST XAMPP




triger roomiLisamine

INSERT INTO logi (kuupaev, andmed, kasutaja)
SELECT NOW(),
CONCAT('Uued andmed - ', NEW.description, ', ', NEW.max_capacity),
USER()
FROM room_type AS rm
WHERE rm.id = NEW.id;



CREATE TRIGGER `roomiLisamine` AFTER INSERT ON `room_type` FOR EACH ROW INSERT INTO logi (kuupaev, andmed, kasutaja) 
SELECT NOW(), CONCAT('Uued andmed - ', NEW.description, ', ', NEW.max_capacity), 
USER() FROM room_type AS rm WHERE rm.id = NEW.id; 


INSERT INTO logi (kuupaev, andmed, kasutaja)
SELECT NOW(),
CONCAT('Vanad andмед - ', OLD.status, ', ', 'Uued andmed - ', NEW.status),
USER()
FROM reserved_room
WHERE reserved_room.id = NEW.room_type_id;

CREATE TRIGGER `statusUuendamine` BEFORE UPDATE ON `reserved_room` FOR EACH ROW INSERT INTO logi (kuupaev, andmed, kasutaja) 
SELECT NOW(), CONCAT('Vanad andmed - ', OLD.status, ', ', 'Uued andmed - ', NEW.status), USER() 
FROM reserved_room WHERE reserved_room.id = NEW.room_type_id; 
